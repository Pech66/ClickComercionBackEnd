generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model almacen {
  Id        String     @id @default(uuid())
  nombre    String?    @db.VarChar(100)
  Id_tienda String?    @db.Char(36)
  tienda    tienda?    @relation(fields: [Id_tienda], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "almacen_ibfk_1")
  producto  producto[]

  @@index([Id_tienda], map: "Id_tienda")
}

model categoria {
  Id          String     @id @default(uuid())
  nombre      String?    @db.VarChar(100)
  descripcion String?    @db.VarChar(255)
  Id_tienda   String?    @db.Char(36)
  tienda      tienda?    @relation(fields: [Id_tienda], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "categoria_ibfk_1")
  producto    producto[]

  @@index([Id_tienda], map: "Id_tienda")
}

model compra {
  Id             String           @id @default(uuid())
  fecha          DateTime?        @db.DateTime(0)
  total          Decimal?         @db.Decimal(10, 2)
  sku            String?          @db.VarChar(255)
  Id_proveedor   String?          @db.Char(36)
  proveedor      proveedor?       @relation(fields: [Id_proveedor], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "compra_ibfk_1")
  productocompra productocompra[]

  @@index([Id_proveedor], map: "Id_proveedor")
}

model detallesventa {
  Id                String    @id @default(uuid())
  cantidad_recibida Decimal?  @db.Decimal(10, 2)
  devuelto          Decimal?  @db.Decimal(10, 2)
  cantidad          Decimal?  @default(0.000) @db.Decimal(10, 3)
  precio_unitario   Decimal?  @default(0.00) @db.Decimal(10, 2)
  subtotal          Decimal?  @default(0.00) @db.Decimal(10, 2)
  Id_venta          String?   @db.Char(36)
  Id_producto       String?   @db.Char(36)
  venta             venta?    @relation(fields: [Id_venta], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "detallesventa_ibfk_1")
  producto          producto? @relation(fields: [Id_producto], references: [Id], onDelete: Restrict, onUpdate: NoAction, map: "detallesventa_ibfk_2")

  @@index([Id_producto], map: "Id_producto")
  @@index([Id_venta], map: "Id_venta")
}

model producto {
  Id                String           @id @default(uuid())
  nombre            String?          @db.VarChar(100)
  descripcion       String?          @db.VarChar(255)
  codigobarra       String?          @db.VarChar(255)
  fotoUrl           String?          @db.VarChar(255)
  precioventa       Decimal?         @db.Decimal(10, 2)
  preciodeproveedor Decimal?         @db.Decimal(10, 2)
  preciokilo        Decimal?         @db.Decimal(10, 2)
  unidaddemedida    String?          @db.VarChar(100)
  esgranel          Boolean?
  Id_almacen        String?          @db.Char(36)
  Id_categoria      String?          @db.Char(36)
  stock             Int?             @default(0)
  detallesventa     detallesventa[]
  almacen           almacen?         @relation(fields: [Id_almacen], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "producto_ibfk_1")
  categoria         categoria?       @relation(fields: [Id_categoria], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "producto_ibfk_2")
  productocompra    productocompra[]

  @@index([Id_almacen], map: "Id_almacen")
  @@index([Id_categoria], map: "Id_categoria")
}

model productocompra {
  Id          String    @id @default(uuid())
  cantidad    Int?
  Id_producto String?   @db.Char(36)
  Id_compra   String?   @db.Char(36)
  producto    producto? @relation(fields: [Id_producto], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "productocompra_ibfk_1")
  compra      compra?   @relation(fields: [Id_compra], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "productocompra_ibfk_2")

  @@index([Id_compra], map: "Id_compra")
  @@index([Id_producto], map: "Id_producto")
}

model proveedor {
  Id        String   @id @default(uuid())
  nombre    String?  @db.VarChar(100)
  telefono  String?  @db.VarChar(15)
  empresa   String?  @db.VarChar(100)
  Id_tienda String?  @db.Char(36)
  compra    compra[]
  tienda    tienda?  @relation(fields: [Id_tienda], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "proveedor_ibfk_1")

  @@index([Id_tienda], map: "Id_tienda")
}

model tienda {
  Id        String      @id @default(uuid())
  nombre    String?     @db.VarChar(100)
  ubicacion String?     @db.VarChar(255)
  telefono  String?     @db.VarChar(15)
  almacen   almacen[]
  categoria categoria[]
  proveedor proveedor[]
  usuarios  usuarios[]
  venta     venta[]
}

model usuarios {
  Id                    String        @id @default(uuid())
  nombre                String?       @db.VarChar(100)
  email                 String?       @unique(map: "email") @db.VarChar(100)
  contrasena            String?       @db.VarChar(255)
  fotoUrl               String?       @db.VarChar(255)
  codigoVerificacion    String?       @db.VarChar(6)
  codigoVerificacionExp DateTime?     @db.DateTime(0)
  activo                Boolean?      @default(true)
  verificado            Boolean?      @default(false)
  rol                   usuarios_rol?
  Id_tienda             String?       @db.Char(36)
  tienda                tienda?       @relation(fields: [Id_tienda], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "usuarios_ibfk_1")

  @@index([Id_tienda], map: "Id_tienda")
}

model venta {
  Id                String          @id @default(uuid())
  totaldeganancias  Decimal?        @db.Decimal(10, 2)
  total_venta       Decimal?        @default(0.00) @db.Decimal(10, 2)
  cantidad_recibida Decimal?        @default(0.00) @db.Decimal(10, 2)
  cambio_devuelto   Decimal?        @default(0.00) @db.Decimal(10, 2)
  fechaDeVenta      DateTime?       @db.DateTime(0)
  Id_tienda         String?         @db.Char(36)
  detallesventa     detallesventa[]
  tienda            tienda?         @relation(fields: [Id_tienda], references: [Id], onDelete: Restrict, onUpdate: NoAction, map: "venta_ibfk_1")

  @@index([Id_tienda], map: "Id_tienda")
}

enum usuarios_rol {
  SUPERADMIN
  ADMIN_TIENDA
  TRABAJADOR
}
